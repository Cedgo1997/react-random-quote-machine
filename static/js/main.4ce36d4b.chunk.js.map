{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["random_rgba","color","Math","floor","random","length","App","props","changeQuote","index","state","quotes","setState","quote","text","author","urlString","tweetString","split","join","bind","this","id","style","background","height","className","target","type","href","rel","onClick","textAlign","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAKMA,EAAc,WAChB,IAAIC,EAAQ,CACR,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ,OAAOA,EAAMC,KAAKC,MAAMD,KAAKE,SAASH,EAAMI,UAG5CJ,EAAQD,IA8FGM,E,kDA3FX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAsDVC,YAAc,WACV,IAAIC,EAASP,KAAKC,MAAMD,KAAKE,SAAS,EAAKM,MAAMC,OAAON,QACxD,EAAKO,UAAS,SAACF,GAAD,MAAY,CACtBG,MAAO,CACHC,KAAMJ,EAAMC,OAAOF,GAAOK,KAC1BC,OAAQL,EAAMC,OAAOF,GAAOM,YAGpCd,EAAQD,IACR,EAAKgB,aAhEU,EAmEnBA,UAAY,WACR,EAAKJ,SAAS,CAEVK,YAAa,6CAAoD,EAAKP,MAAMG,MAAMC,KAAKI,MAAM,KAAKC,KAAK,OAAS,MAAQ,EAAKT,MAAMG,MAAME,OAAOG,MAAM,KAAKC,KAAK,OAAS,SApE7K,EAAKT,MAAQ,CACTC,OAAQ,CACJ,CACI,KAAQ,6EACR,OAAU,kBAEd,CACI,KAAQ,iDACR,OAAU,uBAEd,CACI,KAAQ,uHACR,OAAU,qBAEd,CACI,KAAQ,0EACR,OAAU,kBAEd,CACI,KAAQ,sDACR,OAAU,sBAEd,CACI,KAAQ,6CACR,OAAU,uBAEd,CACI,KAAQ,iEACR,OAAU,iBAEd,CACI,KAAQ,mDACR,OAAU,gBAEd,CACI,KAAQ,+FACR,OAAU,UAGlBE,MAAO,CACHC,KAAM,GACNC,OAAQ,IAEZE,YAAa,IAGjB,EAAKT,YAAc,EAAKA,YAAYY,KAAjB,gBAhDJ,E,qDAmDnB,WACIC,KAAKb,gB,oBAsBT,WACI,OACA,sBAAKc,GAAG,aAAaC,MAAO,CAACtB,MAAOA,EAAOuB,WAAYvB,EAAOwB,OAAQ,QAAtE,UACI,sBAAKH,GAAG,YAAYC,MAAS,CAACC,WAAY,SAA1C,UACI,qBAAIF,GAAG,OAAP,UAAc,mBAAGI,UAAU,2BAA3B,IAA0DL,KAAKX,MAAMG,MAAMC,QAC3E,oBAAGQ,GAAG,SAAN,eAAkBD,KAAKX,MAAMG,MAAME,UACnC,sBAAKO,GAAG,UAAR,UACA,mBAAGK,OAAO,SAASC,KAAK,SAASC,KAAMR,KAAKX,MAAMO,YAAcK,GAAG,cAAcC,MAAO,CAACtB,MAAMA,GAAQ6B,IAAI,aAA3G,SAAwH,mBAAGJ,UAAU,oBACrI,wBAAQK,QAASV,KAAKb,YAAac,GAAG,YAAYC,MAAO,CAACtB,MAAMA,GAAhE,6BAGJ,oBAAG4B,KAAK,+BAA+BN,MAAO,CAACtB,MAAM,QAAS+B,UAAW,UAAzE,0CAA2G,mBAAGN,UAAU,2B,GAtFlHO,IAAMC,WCZTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4ce36d4b.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/heading-has-content */\nimport React from \"react\";\nimport './App.css';\n\n\nconst random_rgba = () => {\n    let color = [\n        '#f26957',\n        '#8fc7f2',\n        '#a988f2',\n        '#f28dd0',\n        '#9df28d',\n        '#8df2ae',\n        '#f2b28d',\n        '#fc7672',\n        '#a572fc',\n        '#572222',\n        '#3c2257'\n    ]\n    return color[Math.floor(Math.random()*color.length)];\n}\n\nlet color = random_rgba();\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            quotes: [\n                {\n                    \"text\": \"Live as if you were to die tomorrow. Learn as if you were to live forever.\",\n                    \"author\": \"Mahatma Gandhi\"\n                },\n                {\n                    \"text\": \"That which does not kill us makes us stronger.\",\n                    \"author\": \"Friedrich Nietzsche\"\n                },\n                {\n                    \"text\": \"Be who you are and say what you feel, because those who mind don’t matter and those who matter don’t mind.\",\n                    \"author\": \"Bernard M. Baruch\"\n                },\n                {\n                    \"text\": \"We must not allow other people’s limited perceptions to define us.\",\n                    \"author\": \"Virginia Satir\"\n                },\n                {\n                    \"text\": \"Do what you can, with what you have, where you are.\",\n                    \"author\": \"Theodore Roosevelt\"\n                },\n                {\n                    \"text\": \"This above all: to thine own self be true.\",\n                    \"author\": \"William Shakespeare\"\n                },\n                {\n                    \"text\": \"If you cannot do great things, do small things in a great way.\",\n                    \"author\": \"Napoleon Hill\"\n                },\n                {\n                    \"text\": \"If opportunity doesn’t knock, build a door.\",\n                    \"author\": \"Milton Berle\"\n                },\n                {\n                    \"text\": \"Wise men speak because they have something to say; fools because they have to say something.\",\n                    \"author\": \"Plato\"\n                }\n            ],\n            quote: {\n                text: '',\n                author: ''\n            },\n            tweetString: ''\n        }\n\n        this.changeQuote = this.changeQuote.bind(this);\n    }\n\n    componentDidMount() {\n        this.changeQuote();\n    }\n\n    changeQuote = () => {\n        let index =  Math.floor(Math.random()*this.state.quotes.length);\n        this.setState((state) => ({\n            quote: {\n                text: state.quotes[index].text,\n                author: state.quotes[index].author\n            }\n        }));\n        color = random_rgba();\n        this.urlString();\n    }\n\n    urlString = () => {\n        this.setState({\n            // eslint-disable-next-line no-useless-concat\n            tweetString: \"https://twitter.com/intent/tweet?text=$\" + \"%22\" + this.state.quote.text.split(' ').join('%20') + '%20' + this.state.quote.author.split(' ').join('%20') + \"%22\"\n        });\n    }\n\n    render() {\n        return (    \n        <div id=\"background\" style={{color: color, background: color, height: '100%'}}>        \n            <div id=\"quote-box\" style = {{background: 'white'}}>\n                <h2 id=\"text\"><i className=\"fa fa-quote-left fa-2x\"></i> {this.state.quote.text}</h2>\n                <p id=\"author\">- {this.state.quote.author}</p>\n                <div id=\"buttons\">\n                <a target=\"_blank\" type=\"button\" href={this.state.tweetString}  id=\"tweet-quote\" style={{color:color}} rel=\"noreferrer\"><i className=\"fa fa-twitter\"></i></a>\n                <button onClick={this.changeQuote} id=\"new-quote\" style={{color:color}}>New Quote</button>\n                </div>\n            </div>\n            <a href=\"https://github.com/Cedgo1997\" style={{color:\"white\", textAlign: 'center'}}>Made by César González <i className=\"fa fa-github\"></i></a>\n         </div>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}